local DiscordLib = loadstring(game:HttpGet "https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/discord%20lib.txt")()

local win = DiscordLib:Window("discord library")

local serv = win:Server("BatFoobies(RunStar)", "")

local info = serv:Channel("Info")

info:Label("Created By BatFoobies.")
info:Label("dsc.gg/batfoobies")
info:Label("Join discord for more scripts!")

DeletePet = false

_G.Loop = false


local function EggHatcher(num)  --- hatch eggs
    local EggID = { [1] = num, [2] = "Open1", [3] = {} } --- Hatch pets
    game:GetService("ReplicatedStorage").Remotes.Hatch.EggHatch:InvokeServer(unpack(EggID))
end
local function del1(num) --- delete 1 pets
    local EggID = { [1] = num, [2] = "Open1", [3] = { [1] = 1} }
    game:GetService("ReplicatedStorage").Remotes.Hatch.EggHatch:InvokeServer(unpack(EggID))
end
local function del2(num) --- delete 2 pets
    local EggID = { [1] = num, [2] = "Open1", [3] = { [1] = 1, [2] = 2} }
    game:GetService("ReplicatedStorage").Remotes.Hatch.EggHatch:InvokeServer(unpack(EggID))
end
local function del3(num) --- delete 3 pets
    local EggID = { [1] = num, [2] = "Open1", [3] = { [1] = 1, [2] = 2, [3] = 3} }
    game:GetService("ReplicatedStorage").Remotes.Hatch.EggHatch:InvokeServer(unpack(EggID))
end
local function del4(num) --- delete 4 pets
    local EggID = { [1] = num, [2] = "Open1", [3] = { [1] = 1, [2] = 2, [3] = 3, [4] = 4} }
    game:GetService("ReplicatedStorage").Remotes.Hatch.EggHatch:InvokeServer(unpack(EggID))
end
local function Craft()  ---- crafts pets together
    for i = 1, 30 do
    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Pet"):WaitForChild("Craft"):InvokeServer(
    unpack({ [1] = i }))
    end
end
local function Threadmill(ass) -- run on threadmill
    game:GetService("ReplicatedStorage").Remotes.Train.AddSpeedRequest:InvokeServer(unpack({ [1] = ass }))
    game:GetService("ReplicatedStorage").Remotes.Train.AddSpeed:FireServer(unpack({ [1] = ass }))
    game:GetService("ReplicatedStorage").Remotes.Shoe.Claim:FireServer()
end

local tgls = serv:Channel("Auto-Farm")

tgls:Label("World 1.")
tgls:Toggle("Threadmill 6 (World 1)", false, function(bool)
    if bool == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if bool == true then
        _G.Loop = true
        while _G.Loop == true do
            wait()
            for i = 1, 20 do
                game:GetService("ReplicatedStorage").Remotes.Train.AddSpeed:FireServer(unpack({ [1] = 6 })) --- loop this
                game:GetService("ReplicatedStorage").Remotes.Shoe.Claim:FireServer()
            end
        end
    end
end)
tgls:Toggle("Auto-Win World 1", false, function(bool)
    if bool == false then
        _G.Loop = false
        return
    end
    if bool == true then
        _G.Loop = true
        while _G.Loop == true do
            wait()
            game:GetService("ReplicatedStorage").Remotes.Race.RacePrepare:InvokeServer()
            game:GetService("ReplicatedStorage").Remotes.Race.RaceReward:FireServer(unpack({ [1] = true, [2] = 3, [3] = 1 }))
        end
    end
end)
tgls:Label("World 2.")
tgls:Toggle("Threadmill 13 (World 2)", false, function(bool)
    if bool == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if bool == true then
        _G.Loop = true
        while _G.Loop == true do
            wait()
            for i = 1, 20 do
                game:GetService("ReplicatedStorage").Remotes.Train.AddSpeed:FireServer(unpack({ [1] = 13 })) --- loop this
                game:GetService("ReplicatedStorage").Remotes.Shoe.Claim:FireServer()
            end
        end
    end
end)
tgls:Toggle("Auto-Win World 2", false, function(bool)
    if bool == false then
        _G.Loop = false
        return
    end
    if bool == true then
        _G.Loop = true
        while _G.Loop == true do
            wait()
            game:GetService("ReplicatedStorage").Remotes.Race.RacePrepare:InvokeServer()
            game:GetService("ReplicatedStorage").Remotes.Race.RaceReward:FireServer(unpack({ [1] = true, [2] = 2, [3] = 1 }))
        end
    end
end)
tgls:Label("World 3.")
tgls:Toggle("Threadmill 20 (World 3)", false, function(bool)
    if bool == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if bool == true then
        _G.Loop = true
        while _G.Loop == true do
            wait()
            for i = 1, 20 do
                game:GetService("ReplicatedStorage").Remotes.Train.AddSpeed:FireServer(unpack({ [1] = 13 })) --- loop this
                game:GetService("ReplicatedStorage").Remotes.Shoe.Claim:FireServer()
            end
        end
    end
end)
tgls:Toggle("Auto-Win World 3", false, function(bool)
    if bool == false then
        _G.Loop = false
        return
    end
    if bool == true then
        _G.Loop = true
        while _G.Loop == true do
            wait()
            game:GetService("ReplicatedStorage").Remotes.Race.RacePrepare:InvokeServer()
            game:GetService("ReplicatedStorage").Remotes.Race.RaceReward:FireServer(unpack({ [1] = true, [2] = 3, [3] = 1 }))
        end
    end
end)





local ManualFarm = serv:Channel("Manual-Farm")

ManualFarm:Label("World 1.")

ManualFarm:Button("ThreadMill (1)", function()
    for i = 1, 100 do
        Threadmill(1)
    end
end)
ManualFarm:Button("ThreadMill (2)", function()
    for i = 1, 100 do
        Threadmill(2)
    end
end)
ManualFarm:Button("ThreadMill (3)", function()
    for i = 1, 100 do
        Threadmill(3)
    end
end)
ManualFarm:Button("ThreadMill (4)", function()
    for i = 1, 100 do
        Threadmill(4)
    end
end)
ManualFarm:Button("ThreadMill (5)", function()
    for i = 1, 100 do
        Threadmill(5)
    end
end)
ManualFarm:Button("ThreadMill (6)", function()
    for i = 1, 100 do
        Threadmill(6)
    end
end)
ManualFarm:Button("VIP ThreadMill (7(Broken))", function()
    for i = 1, 100 do
        Threadmill(7)
    end
end)
ManualFarm:Label("World 2.")
ManualFarm:Button("ThreadMill (8)", function()
    for i = 1, 100 do
        Threadmill(8)
    end
end)
ManualFarm:Button("ThreadMill (9)", function()
    for i = 1, 100 do
        Threadmill(9)
    end
end)
ManualFarm:Button("ThreadMill (10)", function()
    for i = 1, 100 do
        Threadmill(10)
    end
end)
ManualFarm:Button("ThreadMill (11)", function()
    for i = 1, 100 do
        Threadmill(11)
    end
end)
ManualFarm:Button("ThreadMill (12)", function()
    for i = 1, 100 do
        Threadmill(12)
    end
end)
ManualFarm:Button("ThreadMill (13)", function()
    for i = 1, 100 do
        Threadmill(13)
    end
end)
ManualFarm:Button("VIP ThreadMill (14)", function()
    for i = 1, 100 do
        Threadmill(14)
    end
end)
ManualFarm:Label("World 3.")
ManualFarm:Button("ThreadMill (15)", function()
    for i = 1, 100 do
        Threadmill(15)
    end
end)
ManualFarm:Button("ThreadMill (16)", function()
    for i = 1, 100 do
        Threadmill(16)
    end
end)
ManualFarm:Button("ThreadMill (17)", function()
    for i = 1, 100 do
        Threadmill(17)
    end
end)
ManualFarm:Button("ThreadMill (18)", function()
    for i = 1, 100 do
        Threadmill(18)
    end
end)
ManualFarm:Button("ThreadMill (19)", function()
    for i = 1, 100 do
        Threadmill(19)
    end
end)
ManualFarm:Button("ThreadMill (20)", function()
    for i = 1, 100 do
        Threadmill(20)
    end
end)
ManualFarm:Button("VIP ThreadMill (21)", function()
    for i = 1, 100 do
        Threadmill(21)
    end
end)




local EggHatch = serv:Channel("Egg-Hatch")
EggHatch:Label("All eggs will be hatched x10")
EggHatch:Toggle("AutoCraft Pets", false, function(bool)
    if bool == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if bool == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(5)
            Craft()
        end
    end
end)
EggHatch:Toggle("Auto Delete all but best pet when hatching", false, function(PetDelete)
    if PetDelete == true then
        DeletePet = true
        return
    end
    DeletePet = false
end)
EggHatch:Label("World 1")
EggHatch:Toggle("Hatch 5Win", false, function(hatch1)
    if hatch1 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch1 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del3(1)
            else
                EggHatcher(1)
            end
        end
    end
end)
EggHatch:Toggle("Hatch 50Win", false, function(hatch2)
    if hatch2 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch2 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del4(2)
            else
                EggHatcher(1)
            end
        end
    end
end)
EggHatch:Toggle("Hatch 250Win", false, function(hatch3)
    if hatch3 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch3 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del3(3)
            else
                EggHatcher(3)
            end
        end
    end
end)
EggHatch:Toggle("Hatch 3000Win", false, function(hatch4)
    if hatch4 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch4 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del3(4)
            else
                EggHatcher(4)
            end
        end
    end
end)
EggHatch:Label("World 2")
EggHatch:Toggle("Hatch 7500Win", false, function(hatch5)
    if hatch5 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch5 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del4(5)
            else
                EggHatcher(5)
            end
        end
    end
end)
EggHatch:Toggle("Hatch 25KWin", false, function(hatch6)
    if hatch6 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch6 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del3(6)
            else
                EggHatcher(6)
            end
        end
    end
end)
EggHatch:Toggle("Hatch 75KWin", false, function(hatch7)
    if hatch7 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch7 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del3(7)
            else
                EggHatcher(7)
            end
        end
    end
end)
EggHatch:Toggle("Hatch 225KWin", false, function(hatch8)
    if hatch8 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch8 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del2(8)
            else
                EggHatcher(8)
            end
        end
    end
end)
EggHatch:Toggle("Hatch 800KWin", false, function(hatch9)
    if hatch9 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch9 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del2(9)
            else
                EggHatcher(9)
            end
        end
    end
end)
EggHatch:Toggle("Hatch 3MWin", false, function(hatch10)
    if hatch10 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch10 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del2(10)
            else
                EggHatcher(10)
            end
        end
    end
end)
EggHatch:Label("World 3")
EggHatch:Toggle("Hatch 5MWin", false, function(hatch11)
    if hatch11 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch11 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del4(11)
            else
                EggHatcher(11)
            end
        end
    end
end)
EggHatch:Toggle("Hatch 25MWin", false, function(hatch12)
    if hatch12 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch12 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del3(12)
            else
                EggHatcher(12)
            end
        end
    end
end)
EggHatch:Toggle("Hatch 125MWin", false, function(hatch13)
    if hatch13 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch13 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del2(13)
            else
                EggHatcher(13)
            end
        end
    end
end)
EggHatch:Toggle("Hatch 625MWin", false, function(hatch14)
    if hatch14 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch14 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del4(14)
            else
                EggHatcher(14)
            end
        end
    end
end)
EggHatch:Toggle("Hatch 3BWin", false, function(hatch15)
    if hatch15 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch15 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del3(15)
            else
                EggHatcher(15)
            end
        end
    end
end)
EggHatch:Toggle("Hatch 15BWin", false, function(hatch16)
    if hatch16 == false then
        _G.Loop = false     --- set loop false then toggle off
        return
    end
    if hatch16 == true then
        _G.Loop = true
        while _G.Loop == true do
            wait(0.1)
            if DeletePet == true then
                del2(16)
            else
                EggHatcher(16)
            end
        end
    end
end)




